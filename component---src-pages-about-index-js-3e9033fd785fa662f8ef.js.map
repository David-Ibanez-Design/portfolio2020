{"version":3,"sources":["webpack:///./src/pages/about/about.module.scss","webpack:///./src/pages/about/index.js","webpack:///./src/components/seo/seo.js"],"names":["module","exports","About","profilePhoto","data","localizedPath","React","useContext","LocaleContext","t","useTranslations","title","about","seoTitle","description","seoDescription","path","className","style","container","fluid","childImageSharp","images","subtitle","dangerouslySetInnerHTML","__html","textPart1","to","link","textPart2","socialsLinks","Follow","href","Config","siteMetadata","social","linkedin","target","rel","Linkedin","dribbble","Dribbble","Contact","email","or","ResumeEn","resume","SEO","keywords","contentType","locale","metaKeywords","length","name","content","join","Helmet","titleTemplate","site","meta","property","file","src","concat","lang","MyStaticQuery","props","query","render"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,cAAgB,qCAAqC,QAAU,iC,kCCD9H,oKAyEeC,UA5DD,SAAC,GAAY,IAEnBC,EAFkB,EAAVC,KAEYD,aAClBE,EAAkBC,IAAMC,WAAWC,KAAnCH,cAIFI,EAAIC,cACV,OACE,oCACI,kBAAC,IAAD,CAAKC,MAAOF,EAAEG,MAAMC,SAAUC,YAAaL,EAAEG,MAAMG,eAAgBC,KAAMX,IAEzE,yBAAKY,UAAWC,IAAMC,WACpB,yBAAKF,UAAU,sBACb,kBAAC,IAAD,CAAKG,MAAOjB,EAAakB,gBAAgBD,MAAOH,UAAWC,IAAMI,UAEnE,yBAAKL,UAAU,qBACX,4BAAKR,EAAEG,MAAMW,UACb,4BAAKd,EAAEG,MAAMD,OACb,2BACE,0BAAMa,wBAAyB,CAACC,OAAQhB,EAAEG,MAAMc,aAChD,kBAAC,IAAD,CAAeC,GAAE,SAAYlB,EAAEG,MAAMgB,MACrC,0BAAMJ,wBAAyB,CAACC,OAAQhB,EAAEG,MAAMiB,aAChD,kCAAQpB,EAAEqB,aAAaC,OAAvB,KACA,uBACEC,KAAMC,IAAOC,aAAaC,OAAOC,SACjCC,OAAO,SACPC,IAAI,aACJrB,UAAWC,IAAMkB,UAJnB,IAI+B3B,EAAEqB,aAAaS,SAJ9C,KAMA,uBACEP,KAAMC,IAAOC,aAAaC,OAAOK,SACjCH,OAAO,SACPC,IAAI,aACJrB,UAAWC,IAAMsB,UAJnB,IAI+B/B,EAAEqB,aAAaW,UAE9C,kCAAQhC,EAAEqB,aAAaY,QAAvB,KACA,uBACEV,KAAI,UAAYC,IAAOC,aAAaS,MACpCN,OAAO,SACPC,IAAI,aACJrB,UAAWC,IAAMsB,UAJnB,IAI+BP,IAAOC,aAAaS,MAAQ,KAE3D,kCAAQlC,EAAEqB,aAAac,IACvB,uBACEZ,KAAMa,IACNR,OAAO,SACPC,IAAI,aACJrB,UAAWC,IAAMsB,UAJnB,IAI+B/B,EAAEqB,aAAagB,OAJ9C,W,6ICjDVC,EAAM,SAAC,GAMA,IALXpC,EAKU,EALVA,MACAG,EAIU,EAJVA,YACAE,EAGU,EAHVA,KACAgC,EAEU,EAFVA,SACAC,EACU,EADVA,YACA7C,EAAU,EAAVA,KAEMK,EAAIC,cACFwC,EAAW5C,IAAMC,WAAWC,KAA5B0C,OACFC,EACNH,GAAYA,EAASI,OAAS,EAC1B,CAAEC,KAAM,WAAYC,QAASN,EAASO,KAAK,OAC3C,GAEJ,OAEM,kBAACC,EAAA,EAAD,CACE7C,MAAOA,EACP8C,cAAa,QAAUhD,EAAEiD,KAAK/C,MAC9BgD,KACE,CACE,CAAEN,KAAM,cAAeC,QAASxC,GAEhC,CAAE8C,SAAU,WAAYN,QAAS3C,GACjC,CAAEiD,SAAU,UAAWN,QAASL,GAAe,WAC/C,CAAEW,SAAU,SAAUN,QAAStC,GAC/B,CAAE4C,SAAU,iBAAkBN,QAASxC,GACvC,CAAE8C,SAAU,WAAYN,QAASlD,EAAKyD,KAAKxC,gBAAgBD,MAAM0C,KACjE,CAAEF,SAAU,eAAgBN,QAAS7C,EAAEiD,KAAK5C,aAC5C,CAAE8C,SAAU,eAAgBN,QAAS7C,EAAEiD,KAAK/C,OAC5C,CAAEiD,SAAU,YAAaN,QAASJ,GAAU,UAE3Ca,OAAOZ,GAEZvB,KAAM,CAAC,CAAEU,IAAK,YAAaN,KAAMhB,KACjC,0BAAMgD,KAAMd,GAAU,SAMjB,SAASe,EAAcC,GAEpC,OACE,kBAAC,cAAD,CACAC,MAAK,aAWFC,OAAS,SAAAhE,GAAI,OAAO,kBAAC,EAAD,eAAKA,KAAMA,GAAU8D","file":"component---src-pages-about-index-js-3e9033fd785fa662f8ef.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"about-module--container--3fDuy\",\"illustrations\":\"about-module--illustrations--1WrSD\",\"actions\":\"about-module--actions--1AofP\"};","/* Vendor imports */\nimport React from \"react\"\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n/* App imports */\nimport useTranslations from \"../../components/useTranslations\"\nimport SEO from '../../components/seo'\nimport style from './about.module.scss'\nimport ResumeEn from '../../downloads/Resume-en.pdf'\nimport Config from '../../../gatsby-config'\nimport LocalizedLink from '../../components/localizedLink'\nimport { LocaleContext } from \"../../components/layout\"\n\nconst About = ({data}) => {\n\n  const profilePhoto = data.profilePhoto\n  const { localizedPath } = React.useContext(LocaleContext)\n\n  // useTranslations is aware of the global context (and therefore also \"locale\")\n  // so it'll automatically give back the right translations\n  const t = useTranslations()\n  return (\n    <>\n        <SEO title={t.about.seoTitle} description={t.about.seoDescription} path={localizedPath}\n        />\n        <div className={style.container}>\n          <div className=\"container-md mt-13\">\n            <Img fluid={profilePhoto.childImageSharp.fluid} className={style.images}/>\n          </div>\n          <div className=\"container-sm mt-7\">\n              <h5>{t.about.subtitle}</h5>\n              <h1>{t.about.title}</h1>\n              <p>\n                <span dangerouslySetInnerHTML={{__html: t.about.textPart1}}/>\n                <LocalizedLink to={`/data`}>{t.about.link}</LocalizedLink>\n                <span dangerouslySetInnerHTML={{__html: t.about.textPart2}}/>\n                <span> {t.socialsLinks.Follow} </span>\n                <a \n                  href={Config.siteMetadata.social.linkedin} \n                  target=\"_blank\" \n                  rel=\"noreferrer\"  \n                  className={style.linkedin}> {t.socialsLinks.Linkedin},\n                </a> \n                <a \n                  href={Config.siteMetadata.social.dribbble} \n                  target=\"_blank\" \n                  rel=\"noreferrer\"  \n                  className={style.dribbble}> {t.socialsLinks.Dribbble}\n                </a> \n                <span> {t.socialsLinks.Contact} </span>\n                <a \n                  href={`mailto:${Config.siteMetadata.email}`}\n                  target=\"_blank\" \n                  rel=\"noreferrer\"  \n                  className={style.dribbble}> {Config.siteMetadata.email + \" \"} \n                </a> \n                <span> {t.socialsLinks.or}</span>\n                <a \n                  href={ResumeEn}\n                  target=\"_blank\" \n                  rel=\"noreferrer\"  \n                  className={style.dribbble}> {t.socialsLinks.resume}.\n                </a> \n              </p>\n          </div>\n        </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n     {profilePhoto: file(name: { eq: \"about-placeholder\" }) {...imageMedium}}\n`\nexport default About","/* Vendor imports */\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n/* App imports */\nimport { LocaleContext } from \"../layout\"\nimport useTranslations from \"../useTranslations\"\n\nconst SEO = ({\n  title,\n  description,\n  path,\n  keywords,\n  contentType,\n  data}) => {\n\n  const t = useTranslations()\n  const { locale } = React.useContext(LocaleContext)\n  const metaKeywords =\n  keywords && keywords.length > 0\n    ? { name: 'keywords', content: keywords.join(', ') }\n    : []\n\n  return(\n\n        <Helmet\n          title={title} // Page title\n          titleTemplate={`%s | ${t.site.title}`}\n          meta={\n            [\n              { name: 'description', content: description }, // Page description\n              /* Open Graph */\n              { property: 'og:title', content: title },\n              { property: 'og:type', content: contentType || 'website' },\n              { property: 'og:url', content: path },\n              { property: 'og:description', content: description },\n              { property: 'og:image', content: data.file.childImageSharp.fluid.src },\n              { property: 'og:image:alt', content: t.site.description },\n              { property: 'og:site_name', content: t.site.title },\n              { property: 'og:locale', content: locale || 'en_US' }\n            ]\n              .concat(metaKeywords) // Keywords\n          }\n          link={[{ rel: 'canonical', href: path }]}>  \n          <html lang={locale || 'en'} />\n      </Helmet>\n\n  )\n}\n\nexport default function MyStaticQuery(props) {\n\n  return (\n    <StaticQuery\n    query={graphql`\n      query {\n        file(name: { eq: \"di-logo-image\" }) {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      `}\n       render= {data  => ( <SEO data={data} {...props}/> )}\n      />\n    )\n\n\n  }"],"sourceRoot":""}