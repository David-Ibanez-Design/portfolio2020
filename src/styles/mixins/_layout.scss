// Responsive media queries

@mixin breakpoint($breakpoint) {
  @if $breakpoint == "" {
    @content;
  }

  @else {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);

    // If the key exists in the map
    @if $value != null {
      // Prints a media query based on the value
      @media (max-width: $value) {
        @content;
      }
    }

    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
  }
}

// Retina media query

@mixin retina-media-query {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}

// Clearfix
//
// Clears floats via mixin.

@mixin clearfix {
  &::before {
    display: table;
    content: "";
  }

  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin center-both {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-vertical {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin center-horizontal {
  position: absolute !important;;
  left: 50% !important;
  transform: translateX(-50%)!important;
}


@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

@mixin container-sm{
  max-width: calc(#{$container-sm} + (#{$spacer-3}*2));
  width: 100%;
  padding: 0 $spacer-3;
  margin:0 auto;
}


@mixin container-md{
  max-width: calc(#{$container-md} + (#{$spacer-3}*2));
  width: 100%;
  padding: 0 $spacer-3;
  margin:0 auto;
}

@mixin container-lg{
  max-width: calc(#{$container-lg} + (#{$spacer-3}*2));
  width: 100%;
  padding: 0 $spacer-3;
  margin:0 auto;
}

@mixin container-xl{
  max-width: calc(#{$container-xl} + (#{$spacer-3}*2));
  width: 100%;
  padding: 0 $spacer-3;
  margin:0 auto;
}



